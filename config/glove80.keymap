/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
    require-prior-idle-ms = <115>;
};

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <165>;
            bindings = <&mo 1>, <&to 1>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <160>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&magic 4 0  &kp F2                &kp F3                 &kp F4      &kp F5                                                                                                  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp F9           &kp F10
&none       &kp N1                &kp N2                 &kp N3      &kp N4      &kp N5                                                                             &kp N6   &kp N7      &kp N8             &kp N9           &kp N0           &kp MINUS
&none       &kp Q                 &kp W                  &kp E       &lt 3 R     &kp T                                                                              &kp Y    &kp U       &kp I              &kp O            &kp P            &kp BSLH
&none       &mt LEFT_SHIFT A      &mt LCTRL S            &mt LALT D  &mt LGUI F  &lt 1 G                                                                            &lt 1 H  &mt RGUI J  &mt RALT K         &mt LCTRL L      &mt RSHIFT SEMI  &kp SQT
&kp MINUS   &kp Z                 &kp X                  &kp C       &kp V       &kp B    &mt TILDE GRAVE  &kp ESC    &kp LA(GRAVE)  &kp PG_UP  &kp F2   &kp F12    &kp N    &kp M       &kp COMMA          &kp DOT          &kp FSLH         &kp MINUS
&kp EQUAL   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT    &kp RIGHT            &kp BSPC         &kp LSHFT  &kp TAB        &kp PG_DN  &kp RET  &kp SPACE           &kp UP      &kp DOWN           &kp LBKT         &kp RBKT         &kp EQUAL
            >;
        };

        navigation {
            bindings = <
&kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                         &trans    &trans        &trans     &trans  &trans
&trans        &trans        &trans      &trans      &trans    &trans                                                  &trans         &trans    &trans        &trans     &trans  &trans
&trans        &trans        &trans      &trans      &trans    &trans                                                  &kp PAGE_UP    &kp HOME  &kp UP_ARROW  &kp END    &trans  &trans
&trans        &trans        &trans      &trans      &trans    &trans                                                  &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans
&trans        &trans        &trans      &trans      &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans    &trans        &trans     &trans  &trans
&trans        &trans        &trans      &trans      &trans            &trans  &trans  &trans  &trans  &trans  &trans                 &trans    &trans        &trans     &trans  &trans
            >;
        };

        symbols {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                     &trans                &trans                 &trans       &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans     &trans                &trans                 &trans       &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp UNDER  &kp LEFT_BRACKET      &kp RIGHT_BRACE        &kp AT_SIGN  &none     &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp HASH     &kp PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT  &none     &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans             &kp LESS_THAN         &kp GREATER_THAN       &kp CARET    &trans    &trans
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                                                     &trans  &trans  &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &trans     &trans  &trans  &trans      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp UNDER  &kp N7  &kp N8  &kp N9      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                                  &kp MINUS  &kp N4  &kp N5  &kp N6      &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp EQUAL  &kp N1  &kp N2  &kp N3      &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans             &kp N0  &kp N0  &kp PERIOD  &trans  &trans
            >;
        };

        magic_layer {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                     &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                             &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                   &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                   &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none         &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB  &none  &none  &none         &none  &none  &none  &none  &to 5
            >;
        };

        factory_test_layer {
            bindings = <
&kp N0  &kp N6  &kp N2  &kp N8  &kp N4                                                                  &kp N4  &kp N8  &kp N2  &kp N6  &kp N0
&kp N1  &kp N7  &kp N3  &kp N9  &kp N5  &kp N0                                                  &kp N0  &kp N5  &kp N9  &kp N3  &kp N7  &kp N1
&kp N2  &kp N8  &kp N4  &kp N0  &kp N6  &kp N1                                                  &kp N1  &kp N6  &kp N0  &kp N4  &kp N8  &kp N2
&kp N3  &kp N9  &kp N5  &kp N1  &kp N7  &kp N2                                                  &kp N2  &kp N7  &kp N1  &kp N5  &kp N9  &kp N3
&kp N4  &kp N0  &kp N6  &kp N2  &kp N8  &kp N3  &kp N4  &kp N5  &kp N6  &kp N6  &kp N5  &kp N4  &kp N3  &kp N8  &kp N2  &kp N6  &kp N0  &kp N4
&kp N5  &kp N1  &kp N7  &kp N3  &kp N9          &kp N7  &kp N8  &kp N9  &kp N9  &kp N8  &kp N7          &kp N9  &kp N3  &kp N7  &kp N1  &kp N5
            >;
        };
    };
};
